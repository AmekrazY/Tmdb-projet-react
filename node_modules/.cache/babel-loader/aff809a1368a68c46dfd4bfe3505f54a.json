{"ast":null,"code":"var _jsxFileName = \"/Users/yassineamekraz/Desktop/react/ProjetIMDB/src/compenents/Movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n\nconst setVoteClass = vote => {\n  if (vote >= 8) {\n    return \"green\";\n  } else if (vote >= 6) {\n    return \"orange\";\n  } else {\n    return \"red\";\n  }\n};\n\nconst Movie = props => {\n  _s();\n\n  let {\n    title,\n    poster_path,\n    id\n  } = props.persoDatas;\n  let favContext = useContext(FavoriteContext);\n  let [isFav, setFav] = useState('');\n  useEffect(() => {\n    let find = false;\n\n    for (let movieFav of favContext.favs) {\n      if (movieFav.id != id) {\n        continue; // passe au tour de boucle suivant sans executer la suite\n      }\n\n      find = true;\n      setFav(' active');\n      break; // met fin a la boucle\n    }\n\n    if (!find) {\n      setFav('');\n    }\n  }, [favContext]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: IMG_API + poster_path,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `tag ${setVoteClass(vote_average)}`,\n        children: vote_average\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"D\\xE9tails :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movie, \"/0rU3G6UtyBF7+GBMPHm4Z7GSSc=\");\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/Users/yassineamekraz/Desktop/react/ProjetIMDB/src/compenents/Movie.js"],"names":["React","useContext","useState","IMG_API","setVoteClass","vote","Movie","props","title","poster_path","id","persoDatas","favContext","FavoriteContext","isFav","setFav","useEffect","find","movieFav","favs","vote_average","overview"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;AAGA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,YAAY,GAAGC,IAAD,IAAS;AACzB,MAAGA,IAAI,IAAI,CAAX,EAAa;AACT,WAAO,OAAP;AACH,GAFD,MAEM,IAAKA,IAAI,IAAI,CAAb,EAAe;AACjB,WAAO,QAAP;AACH,GAFK,MAED;AACD,WAAO,KAAP;AACH;AACJ,CARD;;AAWA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAErB,MAAI;AAACC,IAAAA,KAAD;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA;AAArB,MAA2BH,KAAK,CAACI,UAArC;AACA,MAAIC,UAAU,GAAGX,UAAU,CAACY,eAAD,CAA3B;AACA,MAAI,CAACC,KAAD,EAAQC,MAAR,IAAkBb,QAAQ,CAAC,EAAD,CAA9B;AAEAc,EAAAA,SAAS,CACL,MAAM;AACF,QAAIC,IAAI,GAAG,KAAX;;AACA,SAAK,IAAIC,QAAT,IAAqBN,UAAU,CAACO,IAAhC,EAAsC;AAClC,UAAID,QAAQ,CAACR,EAAT,IAAeA,EAAnB,EAAuB;AACnB,iBADmB,CACT;AACb;;AACDO,MAAAA,IAAI,GAAG,IAAP;AACAF,MAAAA,MAAM,CAAC,SAAD,CAAN;AACA,YANkC,CAM3B;AACV;;AACD,QAAI,CAACE,IAAL,EAAW;AACPF,MAAAA,MAAM,CAAC,EAAD,CAAN;AACH;AACJ,GAdI,EAcF,CAACH,UAAD,CAdE,CAAT;AAgBA,sBACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BAEI;AAAK,MAAA,GAAG,EAAET,OAAO,GAAGM,WAApB;AAAiC,MAAA,GAAG,EAAED;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAG,OAAMJ,YAAY,CAACgB,YAAD,CAAe,EAAnD;AAAA,kBAAuDA;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAQI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAkBH,CAxCD;;GAAMf,K;;KAAAA,K;AA0CN,eAAeA,KAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\n\n\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n\nconst setVoteClass =(vote) =>{\n    if(vote >= 8){\n        return \"green\";\n    }else if ( vote >= 6){\n        return \"orange\";\n    }else{\n        return \"red\";\n    }\n};\n\n\nconst Movie = (props) => {\n\n    let {title, poster_path, id} = props.persoDatas\n    let favContext = useContext(FavoriteContext);\n    let [isFav, setFav] = useState('');\n    \n    useEffect(\n        () => {\n            let find = false;\n            for (let movieFav of favContext.favs) {\n                if (movieFav.id != id) {\n                    continue; // passe au tour de boucle suivant sans executer la suite\n                }\n                find = true;\n                setFav(' active')\n                break; // met fin a la boucle\n            }\n            if (!find) {\n                setFav('')\n            }\n        }, [favContext]\n    )\n    return(\n    <div className=\"movie\">\n        \n        <img src={IMG_API + poster_path} alt={title}/>\n        <div className=\"movie-info\">\n            <h3>{title}</h3>\n            <span className={`tag ${setVoteClass(vote_average)}`}>{vote_average}</span>\n            \n        </div>\n        <div className=\"movie-over\">\n            <h2>DÃ©tails :</h2> \n            <p>{overview}</p>   \n        </div>\n        \n    </div>\n    )\n    \n\n}\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}